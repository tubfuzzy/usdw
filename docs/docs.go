// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/feed-connections": {
            "get": {
                "description": "Retrieves a paginated list of feed connections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FeedConnections"
                ],
                "summary": "Get all feed connections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ConnectionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new feed connection for bank feeds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FeedConnections"
                ],
                "summary": "Create a new feed connection",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.CreateConnectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/feed-connections/{id}": {
            "get": {
                "description": "Retrieves details of a feed connection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FeedConnections"
                ],
                "summary": "Get feed connection by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed Connection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Connection"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a feed connection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FeedConnections"
                ],
                "summary": "Delete a feed connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed Connection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeleteResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statements": {
            "get": {
                "description": "Retrieves a paginated list of statements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statements"
                ],
                "summary": "Get all statements",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetStatementsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new statement with details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statements"
                ],
                "summary": "Create a new statement",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/domain.PostStatementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statements/{id}": {
            "get": {
                "description": "Retrieves details of a statement by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statements"
                ],
                "summary": "Get statement by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.StatementResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Balance": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "creditDebitIndicator": {
                    "type": "string"
                }
            }
        },
        "domain.Connection": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "accountName": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "accountToken": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "domain.ConnectionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Connection"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/domain.Pagination"
                }
            }
        },
        "domain.CreateConnectionResult": {
            "type": "object",
            "properties": {
                "accountToken": {
                    "type": "string"
                },
                "error": {
                    "$ref": "#/definitions/domain.FeedError"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "domain.CreateConnectionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CreateConnectionResult"
                    }
                }
            }
        },
        "domain.DeleteResult": {
            "type": "object",
            "properties": {
                "accountToken": {
                    "type": "string"
                },
                "error": {
                    "$ref": "#/definitions/domain.FeedError"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "domain.FeedError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "domain.GetStatementsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StatementResult"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/domain.Pagination"
                }
            }
        },
        "domain.Pagination": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageCount": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "domain.PostStatementResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StatementResult"
                    }
                }
            }
        },
        "domain.StatementResult": {
            "type": "object",
            "properties": {
                "endBalance": {
                    "$ref": "#/definitions/domain.Balance"
                },
                "endDate": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.FeedError"
                    }
                },
                "feedConnectionId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "startBalance": {
                    "$ref": "#/definitions/domain.Balance"
                },
                "startDate": {
                    "type": "string"
                },
                "statementLineCount": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "exception.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "USDW API",
	Description:      "API documentation for USDW application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
